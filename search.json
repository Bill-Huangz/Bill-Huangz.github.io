[{"title":"Which number is larger?","url":"/2021/06/12/50v-s-99/","content":"Which is larger? $50^{99}$ or $99!$滑youtube的時候，神秘的演算法推薦了我這部影片(從此我的首頁就被數學佔領了)，這篇內容主要就是比較 $50^{99}$ 跟 $99!$ 的大小，以及證明 $for$ $n \\geq 2$ , $\\left({n+1}\\over{2}\\right)^n$ $&gt;$ $n!$ \nSIMPLE原題目是求 $50^{99}$ 跟 $99!$ 比較大，那麼我們就直接對這兩個數進行操作。考慮 $R=$ $\\frac{ 50^{99} }{99!}$ ，可知 :\n\nif $R&gt;1$ $\\Rightarrow$ $50^{99} &gt; 99!$\nif $R&lt;1$ $\\Rightarrow$ $50^{99} &lt; 99!$\n\n接著把 $R$ 展開:$$ R= \\frac{50\\times50\\times50\\times…\\times\\times50\\times50\\times50}{99\\times98\\times97\\times…\\times3\\times2\\times1}$$分母交換位置:\n$$ R= \\frac{50\\times50}{99\\times1}\\times\\frac{50\\times50}{98\\times2}\\times…\\times\\frac{50\\times50}{51\\times49}\\times\\frac{50}{50}$$\n$\\because$ 分母的部分相加皆為 $100=(50+k)+(50-k)$ ,又 $(50+k)(50-k)=50^2 - k^2\\leq50^2$$\\therefore$ 分子的部分皆大於分母$\\therefore$ $R&gt;1$$\\therefore$ $50^{99}&gt;99!$\nGENERAL下面將利用數學歸納法證明$for$ $n \\geq 2$ , $\\left({n+1}\\over{2}\\right)^n$ $&gt;$ $n!$ 成立。\nStep 1將 $n=2$ 帶入 $\\left({2+1}\\over{2}\\right)^2$ $= \\frac{9}{4}$ $&gt;$ $2!=2$。$\\therefore$ 當 $n=2$ 時，命題成立。\nStep 2Claim 當 $n=k$ 時，命題 ${(k+1)^k}\\over{2}$ $&gt;$ $k!$ 成立。\nStep 3考慮 $n=k+1$$suppose$ $\\left({(k+1)+1}\\over{2}\\right)^{k+1} &gt; (k+1)!$\n$\\left({(k+1)+1}\\over{2}\\right)^{k+1}$= $\\frac{(k+1)^{k+1} +C{k+1\\choose1}(k+1)^k+ X }{2\\times2^k}$ &gt; $\\frac{(k+1)^{k+1}+{(k+1)(k+1)^k}}{2\\times 2^k}=\\frac{(k+1)^{k+1}}{2^k}=(k+1)\\frac{(k+1)^k}{2^k}$$\\because \\frac{(k+1)^k}{2}$ $&gt;$ $k!$$\\therefore (k+1)\\frac{(k+1)^k}{2^k} &gt; (k+1)\\times k!=(k+1)!$$\\therefore \\left({(k+1)+1}\\over{2}\\right)^{k+1} &gt; (k+1)!$($X$ 是分子展開後的剩下部分，$X&gt;0$)因此藉由數學歸納法，我們證明了 $for$ $n \\geq 2$ , $\\left({n+1}\\over{2}\\right)^n$ $&gt;$ $n!$ 成立。把 $n=99$ 帶入，即可得到 $50^{99} &gt; 99!$ 。\nWe are the 21st century# I love Python,Python number one import math  print (pow(50,99)&gt;math.factorial(99));\nTrue","categories":[],"tags":["math","proof"]},{"title":"Codeforce 1536A-Omkar and Bad Story","url":"/2021/06/09/post/","content":"Codeforce 1536A-Omkar and Bad Story題目連結:https://codeforces.com/problemset/problem/1536/A題目大意:給定一個有$n$個元素的數列 &lt;$A$&gt;，求構造出一個數列 &lt;$B$&gt; 使得:(1) $B$ 的 $size\\leq300$(2) $A$ 裡的元素至少都要在 $B$ 出現一次(3) 對於所有的 $b_i,b_j$ ， $|b_i-b_j|$至少在 $B$ 出現一次$-100 \\leq A_i\\leq100$\nSolution如果 $A$ 裡面的某個元素為負數，那麼我們絕對不可能構造出數列&lt;$B$&gt;，因為加絕對值後的數必為非負整數。確定了&lt;$A$&gt;的元素都為非負整數後，那麼接著輸出 $0$ ~ $100$ 就好了，理由如下:(1) 因為 $A$ 的最大可能值為 $100$，故 $0$ ~ $100$ 必可以包含 $A$ 的元素至少一次(2) 假設 $b_i&lt;b_j$ ，那麼 $b_i\\leq |b_i-b_j|\\leq b_j$，而 $A$ 的最大值為 $100$ ，最小值為 $0$，所以 $B=[0,1,2,…,100]$必定可以包含所有的$|b_i-b_j|$\nCode#include &lt;bits/stdc++.h&gt;#define int long long#define menhera_chan_is_mine ios::sync_with_stdio(false);cin.tie(0);cout.tie(0);#define pb push_back#define pi pair&lt;int, int&gt;#define BE(i) i.begin(),i.end()#define fi first#define se second#define INF 2147483647#define mkp make_pair#define ist insert#define mod 1000000009//#pragma GCC optimize(&quot;Ofast,unroll-loops,no-stack-protector,fast-math&quot;)//#pragma GCC optimize(&quot;O2&quot;)using namespace std;int min(int a, int b)&#123;return a &lt; b ? a : b;&#125;int max(int a, int b)&#123;return a &gt; b ? a : b;&#125;bool isprime(int k)&#123;bool is=1 ; for ( int i = 2 ; i*i &lt;= k ; i++ ) if ( k % i == 0 ) is = 0 ; return k&gt;1?is:0;&#125;const double PI=acos(-1);int n;int a[105];inline void sol()&#123;    cin &gt;&gt;n;    for (int i=0;i&lt;n;i++) cin &gt;&gt;a[i];    bool flg=0;    for (int i=0;i&lt;n;i++)&#123;        if (a[i]&lt;0) flg=1;    &#125;    if (flg) cout &lt;&lt;&quot;NO\\n&quot;;    else &#123;        cout &lt;&lt;&quot;YES\\n101\\n&quot;;        for (int i=0;i&lt;=100;i++)            cout &lt;&lt;i&lt;&lt;&quot; &quot;;        cout &lt;&lt;&quot;\\n&quot;;    &#125;&#125;signed main()&#123;    menhera_chan_is_mine    int _=1;    cin &gt;&gt;_;    while (_--) sol();    return 0;&#125;\n時間複雜度:$O(n)$\n","categories":[],"tags":["CF","800","C++"]},{"title":"Hello World","url":"/2021/06/09/hello-world/","content":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub.\nQuick StartCreate a new post$ hexo new &quot;My New Post&quot;\n\nMore info: Writing\nRun server$ hexo server\n\nMore info: Server\nGenerate static files$ hexo generate\n\nMore info: Generating\nDeploy to remote sites$ hexo deploy\n\nMore info: Deployment\n","categories":[],"tags":[]}]